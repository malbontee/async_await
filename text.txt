Как я поняла, асинхронность позволяет эффективно выполнять длительные операции  (сетевые запросы, чтение файлов или запросы в базу данных), не блокируя основной поток 
программы. Она реализуется через ключевые слова async и await, которые дают возможность запускать операции в фоновом режиме (важно использовать оба ключевых слова, ибо 
использование async без await никакой асинхронности не даст). Метод, который помечен как async, возвращает объект Task или Task<T>, что позволяет нам работать с 
результатами операции после её завершения. Внутри асинхронного метода используется ключевое слово await, которое приостанавливает выполнение до тех пор, пока не 
завершится асинхронная операция, но поток не блокируется, что позволяет выполнять и другие задачи. Асинхронность просто необходима, чтобы интерфейс приложения не 
зависал при выполнении длительных операций, таких как..  смотреть предложение 1, в котором я уже все перечислила :).
